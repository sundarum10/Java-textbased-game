/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dgame;

import java.io.IOException;
import static java.lang.System.exit;
import java.util.Random;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class RunningGame extends javax.swing.JFrame {

    /**
     * Creates new form RunningGame
     */
    Data data = new Data(); 
    Random rand = new Random();
    GameOver GO = new GameOver();
    //db_connect db = new  db_connect();
    
    public RunningGame() {
        initComponents();
    }
    public void initGame(){
        data.selectEnemy();
        player.setText(Data.Name);
        health.setText(String.valueOf(data.health));
        hp.setText(String.valueOf(data.numHealthPotions));
        enemyName.setText(data.enemy);
        enemyHealth.setText(String.valueOf(data.enemyHealth));
        progressLabel.setText("Game Yet To Begin!");
        progressLabel1.setText("");
        ifDead.setText("");
        isHP.setText("");
        Data.attack= 0;
        Data.kills =0;
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        player = new javax.swing.JLabel();
        health = new javax.swing.JLabel();
        hp = new javax.swing.JLabel();
        enemy = new javax.swing.JLabel();
        enemyName = new javax.swing.JLabel();
        enemyHealth = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Attack = new javax.swing.JButton();
        Run = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        progressLabel = new javax.swing.JLabel();
        DrinkHP = new javax.swing.JButton();
        ifDead = new javax.swing.JLabel();
        progressLabel1 = new javax.swing.JLabel();
        isHP = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(500, 250));
        setResizable(false);

        jLabel1.setText("Player");
        jLabel1.setMaximumSize(null);

        jLabel2.setText("Health");
        jLabel2.setMaximumSize(null);

        jLabel3.setText("Health Portion");
        jLabel3.setMaximumSize(null);

        player.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        player.setText("name");
        player.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        player.setMaximumSize(null);

        health.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        health.setText("health");
        health.setMaximumSize(null);

        hp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hp.setText("hp");
        hp.setMaximumSize(null);

        enemyName.setText("jLabel5");

        enemyHealth.setText("jLabel6");

        jLabel8.setText("Enemy health");

        jLabel9.setText("Enemy ");

        Attack.setText("Attack");
        Attack.setBorderPainted(false);
        Attack.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Attack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AttackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AttackMouseEntered(evt);
            }
        });

        Run.setText("Run");
        Run.setBorderPainted(false);
        Run.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Run.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RunMouseClicked(evt);
            }
        });
        Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.setBorderPainted(false);
        Exit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });

        progressLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        progressLabel.setText("jLabel5");

        DrinkHP.setText("+");
        DrinkHP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DrinkHPMouseClicked(evt);
            }
        });

        ifDead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ifDead.setText("jLabel4");

        progressLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        progressLabel1.setText("jLabel5");

        isHP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        isHP.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ifDead, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(player, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(health, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DrinkHP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(enemy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enemyName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(enemyHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59)
                        .addComponent(Run, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(progressLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(isHP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(player, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(enemy))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(health, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DrinkHP, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hp, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enemyName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(enemyHealth, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(progressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(progressLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ifDead, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(isHP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Run, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Exit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RunActionPerformed

    private void RunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RunMouseClicked
        // TODO add your handling code here:
        data.selectEnemy();
        enemyName.setText(data.enemy);
        enemyHealth.setText(String.valueOf(data.enemyHealth));
    }//GEN-LAST:event_RunMouseClicked

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        int a=JOptionPane.showConfirmDialog(null, "DO YOU REALLY WANT TO EXIT?");
        if(a==JOptionPane.YES_OPTION){
            //db.storeScore();
            this.setVisible(false);
            GO.setVisible(true);}
    }//GEN-LAST:event_ExitMouseClicked

    private void AttackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AttackMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_AttackMouseEntered

    private void AttackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AttackMouseClicked
        // TODO add your handling code here:
        Data.attack++;
        try {
            attack();
        } catch (InterruptedException ex) {
            isHP.setText(""+ ex);
        }
        if(data.enemyHealth < 1){
            Data.kills++;
            progressLabel.setText("");
            progressLabel1.setText("");
            JOptionPane.showMessageDialog(null, "You Defeated "+data.enemy);
            
            isHPDrop();
            
            data.selectEnemy();
            ifDead.setText(data.enemy+" Has appeared");
            
            enemyName.setText(data.enemy);
            enemyHealth.setText(String.valueOf(data.enemyHealth));
            
        }
    }//GEN-LAST:event_AttackMouseClicked

    private void DrinkHPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DrinkHPMouseClicked
        // TODO add your handling code here:
        if(data.health < 100)
            increaseHealth();
        else
            JOptionPane.showMessageDialog(null, ("You already have max health!!"));
            //isHP.setText("You already have max health");
    }//GEN-LAST:event_DrinkHPMouseClicked
    void increaseHealth(){
        if(data.numHealthPotions > 0){
            data.health = (data.health + data.healthPotionHealAmount);
            if(data.health > 100){
                data.health = 100;
            }
            data.numHealthPotions--;
                        
            health.setText(String.valueOf(data.health));
            hp.setText(String.valueOf(data.numHealthPotions));
        }
        else{
            JOptionPane.showMessageDialog(null, ("No Health Drink Available"));
            //isHP.setText("No Health Portions Available!!");
                    }
    }
    void isHPDrop(){
        if(rand.nextInt(100) < Data.healthPotionDropChance){
                 data.numHealthPotions++; 
                 isHP.setText(data.enemy+" dropped a health potion");
                 hp.setText(String.valueOf(data.numHealthPotions));
             }
    }
    void attack() throws InterruptedException{
        clearLabel();
        int damageDealt = rand.nextInt(data.attackDamage);
        int damageTaken = rand.nextInt(data.enemyAttackDamage);
                    
        data.enemyHealth -= damageDealt;
        data.health -=damageTaken;
        
        
        health.setText(String.valueOf(data.health));
        enemyName.setText(data.enemy);
        enemyHealth.setText(String.valueOf(data.enemyHealth));
                    
        progressLabel.setText("You strike the enemy "+data.enemy+" for "+damageDealt+" damage");
        progressLabel1.setText("\nYou recieve "+damageTaken+" in retaliation! ");
        
        if(data.health < 15 && data.numHealthPotions > 0 ){
            int lh = JOptionPane.showConfirmDialog(null, "You have Low Health\nYou would Like to drink Health drink?");
            if(lh == JOptionPane.YES_OPTION){
                increaseHealth();
            }
        }            
        if(data.health < 1){
            health.setText("0");
            JOptionPane.showMessageDialog(null, ("You are dead"), ("Game Over"), JOptionPane.WARNING_MESSAGE);
            //ifDead.setText("You are dead. You are out of the Dungen ");
            
            this.setVisible(false);
            GO.setVisible(true);
           // db.storeScore();
            GO.showScore();
            
        }
    }
    public void clearLabel(){
        progressLabel.setText("");
        progressLabel1.setText("");
        isHP.setText("");
        ifDead.setText("");
        
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Attack;
    private javax.swing.JButton DrinkHP;
    private javax.swing.JButton Exit;
    private javax.swing.JButton Run;
    private javax.swing.JLabel enemy;
    private javax.swing.JLabel enemyHealth;
    private javax.swing.JLabel enemyName;
    private javax.swing.JLabel health;
    private javax.swing.JLabel hp;
    private javax.swing.JLabel ifDead;
    private javax.swing.JLabel isHP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JLabel player;
    private javax.swing.JLabel progressLabel;
    private javax.swing.JLabel progressLabel1;
    // End of variables declaration//GEN-END:variables
}
